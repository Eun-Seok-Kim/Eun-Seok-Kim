/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.72
 * Generated at: 2022-02-17 09:02:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class member_005flogin_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<!-- BootStrap -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	#box_login{\r\n");
      out.write("		width: 600px;\r\n");
      out.write("		height: 600px;\r\n");
      out.write("		margin-left: auto;\r\n");
      out.write("		margin-right: auto;\r\n");
      out.write("		margin-top: 150px;\r\n");
      out.write("		\r\n");
      out.write("		font-family: '맑은 고딕';\r\n");
      out.write("	}\r\n");
      out.write("	#title_login{\r\n");
      out.write("		text-align: center;			\r\n");
      out.write("		margin-top: 30px;\r\n");
      out.write("		margin-bottom: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	#img_btn_home{\r\n");
      out.write("		width: 250px;\r\n");
      out.write("		height: 110px;\r\n");
      out.write("		\r\n");
      out.write("		margin-bottom: 40px;\r\n");
      out.write("	}\r\n");
      out.write("	#input_id, #input_pwd{\r\n");
      out.write("		margin: 10px auto;\r\n");
      out.write("	}\r\n");
      out.write("	#m_id, #m_pwd{\r\n");
      out.write("		width: 400px;\r\n");
      out.write("	}\r\n");
      out.write("	#subject_login{	\r\n");
      out.write("		margin-top: 30px;\r\n");
      out.write("	}\r\n");
      out.write("	#btn_group_login{\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"  >\r\n");
      out.write("  function  send(f){\r\n");
      out.write("	 \r\n");
      out.write("	  var m_id  = f.m_id.value.trim();\r\n");
      out.write("	  var m_pwd = f.m_pwd.value.trim();\r\n");
      out.write("	  \r\n");
      out.write("	  if(m_id == ''){\r\n");
      out.write("		  alert('아이디를 입력하세요');\r\n");
      out.write("		  f.m_id.value='';\r\n");
      out.write("		  f.m_id.focus();\r\n");
      out.write("		  return;\r\n");
      out.write("	  }\r\n");
      out.write("	  \r\n");
      out.write("	  if(m_pwd == ''){\r\n");
      out.write("		  alert('비밀번호를 입력하세요');\r\n");
      out.write("		  f.m_pwd.value='';\r\n");
      out.write("		  f.m_pwd.focus();\r\n");
      out.write("		  return;\r\n");
      out.write("	  }\r\n");
      out.write("	  \r\n");
      out.write("	  f.action = \"login.do\"; // MemberLoginAction\r\n");
      out.write("	  f.submit();//전송\r\n");
      out.write("	  \r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  $(document).ready(function(){\r\n");
      out.write("	 \r\n");
      out.write("	  setTimeout(show_message,100);\r\n");
      out.write("	  \r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  function show_message(){\r\n");
      out.write("	  // /member/login_form.do?reason=fail_id\r\n");
      out.write("			  \r\n");
      out.write("	 if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.reason eq 'logout'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"==\"true\"){\r\n");
      out.write("    	  \r\n");
      out.write("    	  alert('로그인 세션이 만료되었습니다\\n로그인 후 이용해주십시오');\r\n");
      out.write("    	  \r\n");
      out.write("      }			  \r\n");
      out.write("\r\n");
      out.write("      if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.reason eq 'fail_id'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"==\"true\"){\r\n");
      out.write("    	  \r\n");
      out.write("    	  alert('아이디가 틀렸습니다');\r\n");
      out.write("    	  \r\n");
      out.write("      }	\r\n");
      out.write("	  \r\n");
      out.write("      // /member/login_form.do?reason=fail_pwd\r\n");
      out.write("	  if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.reason eq 'fail_pwd'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"==\"true\"){\r\n");
      out.write("    	  \r\n");
      out.write("    	  alert('비밀번호가 틀렸습니다');\r\n");
      out.write("    	  \r\n");
      out.write("      }	\r\n");
      out.write("	  \r\n");
      out.write("	  $(document).ready(function(){\r\n");
      out.write("		    // 저장된 쿠키값을 가져와서 ID 칸에 넣어준다. 없으면 공백으로 들어감.\r\n");
      out.write("		    var userInputId = getCookie(\"userInputId\");\r\n");
      out.write("		    $(\"input[name='m_id']\").val(userInputId); \r\n");
      out.write("		     \r\n");
      out.write("		    if($(\"input[name='m_id']\").val() != \"\"){ // 그 전에 ID를 저장해서 처음 페이지 로딩 시, 입력 칸에 저장된 ID가 표시된 상태라면,\r\n");
      out.write("		        $(\"#idSaveCheck\").attr(\"checked\", true); // ID 저장하기를 체크 상태로 두기.\r\n");
      out.write("		    }\r\n");
      out.write("		     \r\n");
      out.write("		    $(\"#idSaveCheck\").change(function(){ // 체크박스에 변화가 있다면,\r\n");
      out.write("		        if($(\"#idSaveCheck\").is(\":checked\")){ // ID 저장하기 체크했을 때,\r\n");
      out.write("		            var userInputId = $(\"input[name='m_id']\").val();\r\n");
      out.write("		            setCookie(\"userInputId\", userInputId, 7); // 7일 동안 쿠키 보관\r\n");
      out.write("		        }else{ // ID 저장하기 체크 해제 시,\r\n");
      out.write("		            deleteCookie(\"userInputId\");\r\n");
      out.write("		        }\r\n");
      out.write("		    });\r\n");
      out.write("		     \r\n");
      out.write("		    // ID 저장하기를 체크한 상태에서 ID를 입력하는 경우, 이럴 때도 쿠키 저장.\r\n");
      out.write("		    $(\"input[name='m_id']\").keyup(function(){ // ID 입력 칸에 ID를 입력할 때,\r\n");
      out.write("		        if($(\"#idSaveCheck\").is(\":checked\")){ // ID 저장하기를 체크한 상태라면,\r\n");
      out.write("		            var userInputId = $(\"input[name='m_id']\").val();\r\n");
      out.write("		            setCookie(\"userInputId\", userInputId, 7); // 7일 동안 쿠키 보관\r\n");
      out.write("		        }\r\n");
      out.write("		    });\r\n");
      out.write("		});\r\n");
      out.write("		 \r\n");
      out.write("		function setCookie(cookieName, value, exdays){\r\n");
      out.write("		    var exdate = new Date();\r\n");
      out.write("		    exdate.setDate(exdate.getDate() + exdays);\r\n");
      out.write("		    var cookieValue = escape(value) + ((exdays==null) ? \"\" : \"; expires=\" + exdate.toGMTString());\r\n");
      out.write("		    document.cookie = cookieName + \"=\" + cookieValue;\r\n");
      out.write("		}\r\n");
      out.write("		 \r\n");
      out.write("		function deleteCookie(cookieName){\r\n");
      out.write("		    var expireDate = new Date();\r\n");
      out.write("		    expireDate.setDate(expireDate.getDate() - 1);\r\n");
      out.write("		    document.cookie = cookieName + \"= \" + \"; expires=\" + expireDate.toGMTString();\r\n");
      out.write("		}\r\n");
      out.write("		 \r\n");
      out.write("		function getCookie(cookieName) {\r\n");
      out.write("		    cookieName = cookieName + '=';\r\n");
      out.write("		    var cookieData = document.cookie;\r\n");
      out.write("		    var start = cookieData.indexOf(cookieName);\r\n");
      out.write("		    var cookieValue = '';\r\n");
      out.write("		    if(start != -1){\r\n");
      out.write("		        start += cookieName.length;\r\n");
      out.write("		        var end = cookieData.indexOf(';', start);\r\n");
      out.write("		        if(end == -1)end = cookieData.length;\r\n");
      out.write("		        cookieValue = cookieData.substring(start, end);\r\n");
      out.write("		    }\r\n");
      out.write("		    return unescape(cookieValue);\r\n");
      out.write("		}\r\n");
      out.write("	 \r\n");
      out.write("      \r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" id=\"box_login\">\r\n");
      out.write("	<div id=\"title_login\">\r\n");
      out.write("		<a href=\"../main.do\">\r\n");
      out.write("			<img id=\"img_btn_home\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/logo.png\" alt=\"알고싶지캠핑?\">\r\n");
      out.write("		</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"subject_login\">\r\n");
      out.write("		<form class=\"form-horizontal\" action=\"/action_page.php\">\r\n");
      out.write("			<!-- 읽던 페이지 url 정보 읽어오기 -->\r\n");
      out.write("			<input type=\"hidden\"  name=\"url\"  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ param.url }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">  \r\n");
      out.write("			<div id=\"input_id\" class=\"form-group\">\r\n");
      out.write("				<label class=\"control-label col-sm-2\">아이디:</label>\r\n");
      out.write("			    <div class=\"col-sm-10\">\r\n");
      out.write("			    	<input type=\"text\" class=\"form-control\" id=\"m_id\" name=\"m_id\" placeholder=\"아이디를 입력하세요\">\r\n");
      out.write("			    </div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div class=\"form-group\" id=\"input_pwd\">\r\n");
      out.write("				<label class=\"control-label col-sm-2\">패스워드:</label>\r\n");
      out.write("				<div class=\"col-sm-10\">\r\n");
      out.write("					<input type=\"password\" class=\"form-control\" id=\"m_pwd\" name=\"m_pwd\" placeholder=\"비밀번호를 입력하세요\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		    <div class=\"form-group\" id=\"btn_group_login\">\r\n");
      out.write("		    	<div class=\"col-sm-offset-2 col-sm-10\" style=\"margin-right: 60px; float: right;\">\r\n");
      out.write(" 					\r\n");
      out.write(" 					<input type=\"checkbox\" id=\"idSaveCheck\"><label>&nbsp;아이디 저장</label>\r\n");
      out.write("		    		<button type=\"button\" id=\"btn_login\" class=\"btn btn-default\" onclick=\"send(this.form);\">로그인</button>\r\n");
      out.write("		    		<button type=\"button\" id=\"btn_join_form\" class=\"btn btn-default\" onclick=\"location.href='insert_form.do'\">회원가입</button>\r\n");
      out.write("		    		\r\n");
      out.write("		    	</div>\r\n");
      out.write("		    </div>\r\n");
      out.write("    	</form>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
